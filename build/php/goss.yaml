group:
  www-data:
    exists: true
    gid: 82
user:
  www-data:
    exists: true
    uid: 82
    gid: 82
    groups:
    - www-data
    shell: /bin/false
command:
  # Only confirm that these commands exit cleanly, with no error output.
  # Version constraints have been pushed down to the variant-level test, since they are different
  php -m:
    exit-status: 0
    stderr: ['!/./']
  php -v:
    exit-status: 0
    stderr: ['!/./']
  php-fpm -m:
    exit-status: 0
    stderr: ['!/./']
  php-fpm -v:
    exit-status: 0
    stderr: ['!/./']

  # Test the standard extensions are enabled
  php -m | grep -i apcu:
    exit-status: 0
  php -m | grep -i calendar:
    exit-status: 0
  php -m | grep -i ctype:
    exit-status: 0
  php -m | grep -i curl:
    exit-status: 0
  php -m | grep -i date:
    exit-status: 0
  php -m | grep -i dom:
    exit-status: 0
  php -m | grep -i exif:
    exit-status: 0
  # NOTE: extensions only activates running through FPM mode
  php-fpm -m | grep -i cgi-fcgi:
    exit-status: 0
  php -m | grep -i gd:
    exit-status: 0
  php -m | grep -i iconv:
    exit-status: 0
  php -m | grep -i igbinary:
    exit-status: 0
  php -m | grep -i intl:
    exit-status: 0
  php -m | grep -i json:
    exit-status: 0
  php -m | grep -i mbstring:
    exit-status: 0
  # php -m | grep -i mcrypt:
  #   exit-status: 0
  # Not common to all variants, test in supported children
  php -m | grep -i memcache:
    exit-status: 0
  php -m | grep -i memcached:
    exit-status: 0
  php -m | grep -i msgpack:
    exit-status: 0
  php -m | grep -i mysqli:
    exit-status: 0
  php -m | grep -i mysqlnd:
    exit-status: 0
  php -m | grep -i opcache:
    exit-status: 0
  php -m | grep -i openssl:
    exit-status: 0
  php -m | grep -i pdo:
    exit-status: 0
  php -m | grep -i pdo_mysql:
    exit-status: 0
  php -m | grep -i phar:
    exit-status: 0
  php -m | grep -i posix:
    exit-status: 0
  php -m | grep -i readline:
    exit-status: 0
  php -m | grep -i shmop:
    exit-status: 0
  php -m | grep -i simplexml:
    exit-status: 0
  php -m | grep -i sockets:
    exit-status: 0
  php -m | grep -i sysvmsg:
    exit-status: 0
  php -m | grep -i sysvsem:
    exit-status: 0
  php -m | grep -i tokenizer:
    exit-status: 0
  php -m | grep -i xml:
    exit-status: 0
  php -m | grep -i xmlreader:
    exit-status: 0
  php -m | grep -i xmlwriter:
    exit-status: 0
  php -m | grep -i zip:
    exit-status: 0
  php -m | grep -i zlib:
    exit-status: 0

  # Test that extra extensions are disabled by default
  php -m | grep newrelic:
    exit-status: 1
    stderr: ['!/./']
  php -m | grep redis:
    exit-status: 1
    stderr: ['!/./']
  php -m | grep xdebug:
    exit-status: 1
    stderr: ['!/./']
  # To test and validate by-default disabled extensions [without side effects]
  # Hack:
  # 1. run php with no ini file (-n)
  # 2. pass ini key-value (-d), enable the single extension to test
  # 3. list the newly loaded php mods (-m)
  # 4. grep the output of the loaded mods for the one under test
  # On some variants, session is not loaded as part of the core, and must be loaded at this time
  php -n -d extension=redis.so -m | grep redis:
    exit-status: 0
    # On session-default installs, re-loading session causes a warning, ignore
    stderr: ['!/./']

  # IMPORTANT: confirm the major/minor version of PHP itself
  php -r 'echo PHP_MAJOR_VERSION;':
    exit-status: 0
    stdout: [7]
    stderr: ['!/./']
  php -r 'echo PHP_MINOR_VERSION;':
    exit-status: 0
    stdout: [2]
    stderr: ['!/./']
  php-fpm -m:
    exit-status: 0
    stderr: ['!/./']
  php-fpm -v:
    exit-status: 0
    stdout: [PHP 7.2]
    stderr: ['!/./']

file:
  # TODO: hopefully https://github.com/aelsabbahy/goss/issues/164 allows this to be a shared test using env variables
  /usr/local/etc/php-fpm.d/www.conf:
    exists: true
    contains:
      - '/^listen = 127.0.0.1:9000/'
      - '/^chdir = \/app/'
      - '/^pm.max_children = \${PHP_FPM_MAX_CHILDREN}/'
      - '/^pm.start_servers = \${PHP_FPM_START_SERVERS}/'
      - '/^pm.max_requests = \${PHP_FPM_MAX_REQUESTS}/'
      - '/^pm.min_spare_servers = \${PHP_FPM_MIN_SPARE_SERVERS}/'
      - '/^pm.max_spare_servers = \${PHP_FPM_MAX_SPARE_SERVERS}/'
      - '/^pm.status_path = \/__status/'
      - '/^clear_env = no/'
      - '/^catch_workers_output = yes/'
      - '/^listen.allowed_clients = 127.0.0.1/'
      # - '/^;user =/'
      # - '/^;group =/'
      - '/^request_terminate_timeout = \${PHP_FPM_MAX_EXECUTION_TIME}/'
      - '/^rlimit_files = 40000/'
      - '/^rlimit_core = unlimited/'
  /usr/local/etc/php/conf.d/docker-php-ext-newrelic.ini:
    exists: true
    contains:
      - '/^;extension =/'
      - '/^newrelic.appname = \"\${REPLACE_NEWRELIC_APP}\"/'
      - '/^newrelic.license = \"\${REPLACE_NEWRELIC_LICENSE}\"/'
      - '/^newrelic.logfile = \"\/dev\/stdout\"/'
      - '/^newrelic.daemon.logfile = \"\/dev\/stdout\"/'
      - '/^newrelic.loglevel = \"warning\"/'
      - '/^newrelic.daemon.loglevel = \"warning\"/'
  /usr/local/etc/php-fpm.conf:
    exists: true
    contains:
      - '/^error_log = \/dev\/stdout/'
